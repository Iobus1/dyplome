import sqlite3

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤"""
    conn = sqlite3.connect('knowledge_base.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS knowledge_base
                 (question TEXT, answer TEXT)''')

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    questions_and_answers = [
        ("–ß—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?", "–ò–ò (–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç) ‚Äî —ç—Ç–æ –æ–±–ª–∞—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–∏—Å—Ç–µ–º, —Å–ø–æ—Å–æ–±–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ã—á–Ω–æ —Ç—Ä–µ–±—É—é—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—É—á–µ–Ω–∏–µ, –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –∏ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º."),
        ("–ö—Ç–æ —Ç—ã?", "–Ø —á–∞—Ç-–±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã."),
        ("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?", "–Ø ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫, –Ω–µ –∏–º–µ—é –∏–º–µ–Ω–∏, –Ω–æ –º–æ–≥—É –ø–æ–º–æ–≥–∞—Ç—å –≤ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö."),
        ("–ö–∞–∫–æ–π —Ç–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª?", "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ."),
        ("–ü–æ–Ω—è–ª", "–•–æ—Ä–æ—à–æ, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å"),
        ("–ù–µ –Ω–∞–¥–æ", "–•–æ—Ä–æ—à–æ, –µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, —Ç–æ –ø–∏—à–∏—Ç–µ!"),
        ("–ù–µ—Ç/–ù–µ", "–ü–æ–Ω—è–ª!"),
        ("–ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç?", "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –º–∞—à–∏–Ω –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ, –º—ã—à–ª–µ–Ω–∏–µ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π."),
    ]
    
    # –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É
    c.executemany("INSERT OR IGNORE INTO knowledge_base (question, answer) VALUES (?, ?)", questions_and_answers)

    conn.commit()
    conn.close()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞–º–∏.")

def save_to_db(question, answer):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É"""
    try:
        conn = sqlite3.connect('knowledge_base.db')
        c = conn.cursor()
        c.execute("INSERT INTO knowledge_base (question, answer) VALUES (?, ?)", 
                  (question, answer))
        conn.commit()
        print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")
    finally:
        conn.close()

def search_knowledge_base(query):
    """–ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–ø—Ä–æ—Å—É"""
    conn = sqlite3.connect('knowledge_base.db')
    c = conn.cursor()
    c.execute("SELECT answer FROM knowledge_base WHERE LOWER(question) LIKE LOWER(?)", 
              ('%' + query + '%',))
    result = c.fetchone()
    conn.close()
    if result:
        return result[0]
    return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –Ω–∞—à—ë–ª –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å."
