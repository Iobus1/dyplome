import aiohttp
from keys import GOOGLE_API_KEY, CX

async def fetch_edu_data(query: str) -> str:
    """–ü–æ–∏—Å–∫ –æ–±—É—á–∞—é—â–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º"""
    allowed_sites = [
        "khanacademy.org",
        "wikipedia.org",
        "britannica.com",
        "coursera.org",
        "edx.org",
        "nauka.ru",
        "edu.ru",
        "habr.com",
        "sparknotes.com"
    ]
    site_filter = " OR ".join([f"site:{site}" for site in allowed_sites])
    full_query = f"{query} {site_filter}"

    url = f"https://www.googleapis.com/customsearch/v1?q={full_query}&key={GOOGLE_API_KEY}&cx={CX}"

    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status != 200:
                    return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ."
                data = await response.json()
                for item in data.get("items", []):
                    title = item.get("title")
                    snippet = item.get("snippet")
                    link = item.get("link")
                    if title and snippet and link:
                        return f"<b>{title}</b>\n\n{snippet}\n\nüîó {link}"
                return "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –æ–±—É—á–∞—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö."
